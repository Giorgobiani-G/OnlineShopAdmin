// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using OnlineShopAdmin.DataAccess.Base;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace OnlineShopAdmin.DataAccess.Models
{
    /// <summary>
    /// Customer information.
    /// </summary>
    public partial class Customer : BaseProperTy
    {
        public Customer()
        {
            CustomerAddresses = new HashSet<CustomerAddress>();
            SalesOrderHeaders = new HashSet<SalesOrderHeader>();
        }

        /// <summary>
        /// Primary key for Customer records.
        /// </summary>
        public int CustomerId { get; set; }
        /// <summary>
        /// 0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.
        /// </summary>
        public bool NameStyle { get; set; }
        /// <summary>
        /// A courtesy title. For example, Mr. or Ms.
        /// </summary>
        public string Title { get; set; }
        /// <summary>
        /// First name of the person.
        /// </summary>
        [Required(ErrorMessage = "Mandatory Field!")]
        [MaxLength(50, ErrorMessage = "Maximum 50 Characters!")]
        public string FirstName { get; set; }
        /// <summary>
        /// Middle name or middle initial of the person.
        /// </summary>
        [MaxLength(50, ErrorMessage = "Maximum 50 Characters!")]
        public string MiddleName { get; set; }
        /// <summary>
        /// Last name of the person.
        /// </summary>
        [Required(ErrorMessage = "Mandatory Field!")]
        [MaxLength(50, ErrorMessage = "Maximum 50 Characters!")]
        public string LastName { get; set; }
        /// <summary>
        /// Surname suffix. For example, Sr. or Jr.
        /// </summary>
        [MaxLength(10, ErrorMessage = "Maximum 10 Characters!")]
        public string Suffix { get; set; }
        /// <summary>
        /// The customer&apos;s organization.
        /// </summary>
        [MaxLength(128, ErrorMessage = "Maximum 128 Characters!")]
        public string CompanyName { get; set; }
        /// <summary>
        /// The customer&apos;s sales person, an employee of AdventureWorks Cycles.
        /// </summary>
        [MaxLength(256, ErrorMessage = "Maximum 256 Characters!")]
        public string SalesPerson { get; set; }
        /// <summary>
        /// E-mail address for the person.
        /// </summary>
        [MaxLength(50, ErrorMessage = "Maximum 50 Characters!")]
        public string EmailAddress { get; set; }
        /// <summary>
        /// Phone number associated with the person.
        /// </summary>
        [MaxLength(25, ErrorMessage = "Maximum 25 Characters!")]
        public string Phone { get; set; }
        /// <summary>
        /// Password for the e-mail account.
        /// </summary>
        [Required(ErrorMessage = "Mandatory Field!")]
         
        public string PasswordHash { get; set; }
        /// <summary>
        /// Random value concatenated with the password string before the password is hashed.
        /// </summary>
         
        [Required(ErrorMessage = "Mandatory Field!")]
        [MaxLength(10, ErrorMessage = "Maximum 10 Characters!")]
        public string PasswordSalt { get; set; }
        /// <summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        /// </summary>
        public Guid Rowguid { get; set; }
        /// <summary>
        /// Date and time the record was last updated.
        /// </summary>
         

        public virtual ICollection<CustomerAddress> CustomerAddresses { get; set; }
        public virtual ICollection<SalesOrderHeader> SalesOrderHeaders { get; set; }
    }
}