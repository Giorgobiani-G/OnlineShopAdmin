@using OnlineShopAdmin.DataAccess.Repository
@model IEnumerable<OnlineShopAdmin.DataAccess.Models.ProductCategory>

@{
    ViewData["Title"] = "Index";
    Pager pager = new Pager();
    int pageNo = 0;
    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}

<h1>ProductCategories</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
               ProductsCount
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rowguid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ParentProductCategory)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
             <td>
                @item.Products.Count
            <td>
                @Html.DisplayFor(modelItem => item.Rowguid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentProductCategory.Name)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.ProductCategoryId" asp-route-pg="@TempData["page"]">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ProductCategoryId" asp-route-pg="@TempData["page"]">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ProductCategoryId" asp-route-pg="@TempData["page"]">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div class="container">
    @if (pager.TotalPages > 0)
    {
        <ul class="pagination justify-content-end">

            @if (pager.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="ProductCategories" asp-action="Index" asp-route-pg="1">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="ProductCategories" asp-action="Index" asp-route-pg="@(pager.CurrentPage-1)">Previous</a>
                </li>
            }
            @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
            {
                <li class="page-item @(pge==pager.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-controller="ProductCategories" asp-action="Index" asp-route-pg="@pge">@pge</a>
                </li>
            }
            @if (pager.CurrentPage < pager.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="ProductCategories" asp-action="Index" asp-route-pg="@(pager.CurrentPage+1)">Next</a>
                </li>
                <li>
                    <a class="page-link" asp-controller="ProProductCategoriesducts" asp-action="Index" asp-route-pg="@(pager.TotalPages)">Last</a>
                </li>
            }
        </ul>
    }
</div>
